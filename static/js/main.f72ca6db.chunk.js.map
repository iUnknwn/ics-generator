{"version":3,"sources":["CalendarComponents/EventInfo.tsx","About.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["EventInfo","useState","eventStart","dayjs","eventStop","add","description","title","location","state","setState","extraStyle","useRef","marginTop","className","TextField","label","fullWidth","value","onChange","v","target","type","format","style","d","multiline","rows","Button","variant","onClick","eventInfo","icsEvent","start","split","map","x","parseInt","end","createEvent","GetICS","error","console","log","elem","document","createElement","file","Blob","href","URL","createObjectURL","setAttribute","body","appendChild","click","removeChild","About","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4SA0Be,SAASA,IAAa,IAAD,EACNC,mBAA4B,CAClDC,WAAYC,MACZC,UAAWD,MAAQE,IAAI,EAAG,QAC1BC,YAAa,GACbC,MAAO,GACPC,SAAU,KANkB,mBACzBC,EADyB,KAClBC,EADkB,KA4B1BC,GApBkBC,iBAAO,MAoBZ,CACfC,UAAW,QAIf,OACQ,sBAAKC,UAAU,YAAf,UACI,cAACC,EAAA,EAAD,CAAWC,MAAM,cAAcC,WAAS,EAACC,MAAOT,EAAMF,MAClDY,SAAU,SAACC,GAAD,OAAOV,EAAS,2BAAID,GAAL,IAAYF,MAAOa,EAAEC,OAAOH,YACzD,cAACH,EAAA,EAAD,CAAWO,KAAK,iBAAiBL,WAAS,EAACD,MAAM,cAAcE,MAAOT,EAAMP,WAAWqB,OAAO,oBAC1FC,MAAOb,EAAYQ,SAAU,SAACM,GAAD,OAAOf,EAAS,2BAAID,GAAL,IAAYP,WAAYC,IAAMsB,EAAEJ,OAAOH,aACvF,cAACH,EAAA,EAAD,CAAWO,KAAK,iBAAiBL,WAAS,EAACD,MAAM,YAAYE,MAAOT,EAAML,UAAUmB,OAAO,oBACvFC,MAAOb,EAAYQ,SAAU,SAACM,GAAD,OAAOf,EAAS,2BAAID,GAAL,IAAYL,UAAWD,IAAMsB,EAAEJ,OAAOH,aACtF,cAACH,EAAA,EAAD,CAAWW,WAAS,EAACC,KAAM,EAAGX,MAAM,cAAcC,WAAS,EAACC,MAAOT,EAAMH,YACrEkB,MAAOb,EAAYQ,SAAU,SAAAC,GAAC,OAAIV,EAAS,2BAAID,GAAL,IAAYH,YAAac,EAAEC,OAAOH,YAChF,cAACU,EAAA,EAAD,CAAQC,QAAQ,YAAYL,MAAO,CAACX,UAAU,OAAQiB,QAjC9C,WAAO,IAAD,EAtB9B,SAAgBC,GAEZ,IAAMC,EAAW,CACbC,MAAOF,EAAU7B,WAAWqB,OAAO,gBAAgBW,MAAM,KAAKC,KAAI,SAAAC,GAAC,OAAIC,SAASD,MAChFE,IAAKP,EAAU3B,UAAUmB,OAAO,gBAAgBW,MAAM,KAAKC,KAAI,SAAAC,GAAC,OAAIC,SAASD,MAC7E7B,MAAOwB,EAAUxB,MACjBD,YAAayB,EAAUzB,aAG3B,OAAOiC,sBAAYP,GAcQQ,CAAO/B,GAAvBgC,EADe,EACfA,MAAOvB,EADQ,EACRA,MACd,GAAIuB,EAGA,OAFAC,QAAQC,IAAR,kBACAD,QAAQC,IAAIF,GACL,KAEN,GAAIvB,EAAM,CACX,IAAM0B,EAAOC,SAASC,cAAc,KAC9BC,EAAO,IAAIC,KAAK,CAAC9B,IACvB0B,EAAKK,KAAOC,IAAIC,gBAAgBJ,GAChCH,EAAKQ,aAAa,WAAY,aAC9BP,SAASQ,KAAKC,YAAYV,GAC1BA,EAAKW,QACLV,SAASQ,KAAKG,YAAYZ,KAmBtB,6BCrED,SAASa,IACpB,OACI,sBAAKjC,MAAO,CAACX,UAAW,OAAxB,UACI,iDACA,oPAIA,uGCWG6C,MAff,WACE,OACE,sBAAK5C,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,6DAEF,sBAAKA,UAAU,cAAf,UACE,sHACA,cAAC,EAAD,IACA,cAAC2C,EAAD,WCCOE,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzB,SAAS0B,eAAe,SAM1BZ,M","file":"static/js/main.f72ca6db.chunk.js","sourcesContent":["import {useRef, useState} from 'react';\r\nimport {createEvent, DateArray } from 'ics'\r\nimport dayjs from 'dayjs';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport \"./EventInfo.css\"\r\n\r\nexport interface CalendarEventType {\r\n    eventStart: dayjs.Dayjs,\r\n    eventStop: dayjs.Dayjs,\r\n    description: string,\r\n    title: string,\r\n    location: string\r\n}\r\n\r\nfunction GetICS(eventInfo: CalendarEventType){\r\n    \r\n    const icsEvent = {\r\n        start: eventInfo.eventStart.format('YYYY-M-D-H-m').split(\"-\").map(x => parseInt(x)) as DateArray,\r\n        end: eventInfo.eventStop.format('YYYY-M-D-H-m').split(\"-\").map(x => parseInt(x)) as DateArray,\r\n        title: eventInfo.title,\r\n        description: eventInfo.description\r\n    }\r\n\r\n    return createEvent(icsEvent)\r\n}\r\n\r\nexport default function EventInfo() {\r\n    const [state, setState] = useState<CalendarEventType>({\r\n        eventStart: dayjs(),\r\n        eventStop: dayjs().add(1, 'hour'),\r\n        description: \"\",\r\n        title: \"\",\r\n        location: \"\"\r\n    })\r\n    const downloadLinkRef = useRef(null)\r\n    \r\n    const generateIcs = () => {\r\n        const {error, value} = GetICS(state)\r\n        if (error) {\r\n            console.log(`Error occurred`)\r\n            console.log(error)\r\n            return null\r\n        }\r\n        else if (value){\r\n            const elem = document.createElement(\"a\")\r\n            const file = new Blob([value])\r\n            elem.href = URL.createObjectURL(file)\r\n            elem.setAttribute(\"download\", \"event.ics\")\r\n            document.body.appendChild(elem)\r\n            elem.click()\r\n            document.body.removeChild(elem)\r\n        }\r\n    }\r\n\r\n    const extraStyle = {\r\n        marginTop: \"1em\",\r\n    }\r\n\r\n    // <Button variant=\"contained\" onClick={generateIcs}>Generate ics</Button>\r\n    return (\r\n            <div className=\"EventInfo\">\r\n                <TextField label=\"Event Title\" fullWidth value={state.title} \r\n                    onChange={(v) => setState({...state, title: v.target.value})} />\r\n                <TextField type=\"datetime-local\" fullWidth label=\"Event Start\" value={state.eventStart.format(\"YYYY-MM-DDTHH:mm\")} \r\n                    style={extraStyle} onChange={(d) => setState({...state, eventStart: dayjs(d.target.value)})} />\r\n                <TextField type=\"datetime-local\" fullWidth label=\"Event End\" value={state.eventStop.format(\"YYYY-MM-DDTHH:mm\")} \r\n                    style={extraStyle} onChange={(d) => setState({...state, eventStop: dayjs(d.target.value)})} />\r\n                <TextField multiline rows={4} label=\"Description\" fullWidth value={state.description} \r\n                    style={extraStyle} onChange={v => setState({...state, description: v.target.value})} />\r\n                <Button variant=\"contained\" style={{marginTop:\"2em\"}} onClick={generateIcs}>Generate ics</Button>\r\n                \r\n            </div>\r\n    )\r\n}","export default function About() {\r\n    return (\r\n        <div style={{marginTop: \"3em\"}}>\r\n            <h2>About This Tool</h2>\r\n            <p>This tool was built to provide a simple, straightforward way to build ICS files,\r\n               without sending your event information back to some server. This app is written\r\n               in javascript and runs completely in your browser. \r\n            </p>\r\n            <p>Built with Typescript, Material-UI components, and the ics package.</p>\r\n        </div>\r\n    )\r\n}","import './App.css';\nimport EventInfo from './CalendarComponents/EventInfo'\nimport About from './About'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Simple ICS File Generator</h1>\n      </header>\n      <div className=\"mainContent\">\n        <p>Generate an ICS event file, compatible with Google Calendar, iCal, Outlook, and more.</p>\n        <EventInfo />\n        <About />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}